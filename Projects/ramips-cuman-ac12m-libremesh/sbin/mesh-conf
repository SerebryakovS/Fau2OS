#!/bin/bash

insmod mtd-rw.ko i_want_a_brick=1

MasterConfiguration(){
	#--- system configuration
	uci set system.@system[0].hostname="mesh_master"
	uci commit system
	#--- firewall configuration
	uci -q delete firewall.wan_ssh
	uci -q delete firewall.allow_iperf
	uci set firewall.mlan="zone"
	uci set firewall.mlan.name="mlan"
	uci set firewall.mlan.network="mlan"
	uci set firewall.mlan.input="ACCEPT"
	uci set firewall.mlan.output="ACCEPT"
	uci set firewall.mlan.forward="ACCEPT"
	uci set firewall.mlan_wan="forwarding"
	uci set firewall.mlan_wan.src="mlan"
	uci set firewall.mlan_wan.dest="wan"
	###
	uci set firewall.allow_iperf="rule"
	uci set firewall.allow_iperf.name="allow-iperf"
	uci set firewall.allow_iperf.src="mlan"
	uci set firewall.allow_iperf.proto="all"
	uci set firewall.allow_iperf.dest_port="5201"
	uci set firewall.allow_iperf.target="ACCEPT"
	uci set firewall.allow_iperf.family="ipv4"
	uci commit firewall
	#--- network configuration
	uci -q delete network.wan.type
	uci set network.mlan="interface"
	uci set network.mlan.type="bridge"
	uci set network.mlan.ifname="eth0.123"
	uci set network.mlan.proto="static"
	uci set network.mlan.ipaddr="10.10.11.1"
	uci set network.mlan.netmask="255.255.255.0"
	uci set network.lan_eth0_1_dev.macaddr="f8:5e:3c:1e:57:00"
	uci set network.wan_eth0_2_dev.macaddr="f8:5e:3c:1e:57:01"
	uci del network.lan.dns
	uci commit network
	#--- wireless configuration
	uci set wireless.mesh1.network="mlan"
	uci commit wireless
	#--- dhcp configuration
	uci set dhcp.mlan="dhcp"
	uci set dhcp.mlan.interface="mlan"
	uci set dhcp.mlan.start="10"
	uci set dhcp.mlan.limit="200"
	uci set dhcp.mlan.leasetime="15m"
	uci set dhcp.mlan.dhcpv6="server"
	uci set dhcp.mlan.ra="server"
	uci set dhcp.@dnsmasq[0].local="/mlan/"
	uci set dhcp.@dnsmasq[0].domain="mlan"
	#--- stop some services
# 	service dnsmasq enable
# 	service dnsmasq start
# 	service odhcpd enable
# 	service odhcpd start
	uci commit dhcp
	#--- rewrite eeprom
	sleep 3
	mtd -r write /etc/eeprom/eeprom01.bin factory
}

SlaveConfiguration(){
	#--- system configuration
	uci set system.@system[0].hostname="mesh_slave_"$1
	uci commit system
	#--- firewall configuration
	uci -q delete firewall.mlan
	uci -q delete firewall.mlan_wan
	uci -q delete firewall.allow_iperf
	uci set firewall.wan_ssh="rule"
	uci set firewall.wan_ssh.src="wan"
	uci set firewall.wan_ssh.dest_port="22"
	uci set firewall.wan_ssh.target="ACCEPT"
	uci set firewall.wan_ssh.proto="tcp"
	###
	uci set firewall.allow_iperf="rule"
	uci set firewall.allow_iperf.name="allow-iperf"
	uci set firewall.allow_iperf.src="wan"
	uci set firewall.allow_iperf.proto="all"
	uci set firewall.allow_iperf.dest_port="5201"
	uci set firewall.allow_iperf.target="ACCEPT"
	uci set firewall.allow_iperf.family="ipv4"
	uci commit firewall
	#--- network configuration
	uci -q delete network.mlan
	uci set network.wan.type="bridge"
	MacDigit=$( expr $1 \* 2 )
	uci set network.lan_eth0_1_dev.macaddr="f8:5e:3c:1e:57:0"$MacDigit
	uci set network.wan_eth0_2_dev.macaddr="f8:5e:3c:1e:57:0"$( expr $MacDigit + 1 )
	uci set network.lan.dns="10.10.11.1"
	uci commit network
	#--- wireless configuration
	uci set wireless.mesh1.network="wan"
	uci commit wireless
	#--- dhcp configuration
	uci -q delete dhcp.mlan
	uci set dhcp.@dnsmasq[0].local="/lan/"
	uci set dhcp.@dnsmasq[0].domain="/lan/"
	uci commit dhcp
	#--- stop some services
# 	service dnsmasq disable
# 	service dnsmasq stop
# 	service odhcpd disable
# 	service odhcpd stop
	#--- rewrite eeprom
	EepromFileNumber=$( expr $1 + 1 )
	sleep 3
	mtd -r write /etc/eeprom/eeprom0$EepromFileNumber.bin factory
}

LibreConfiguration(){
	Filepath="old_factory"
	dd if=/dev/mtd2 of=$Filepath
	DefaultMAC=$( dd if=$Filepath bs=1 skip=$((0xe000)) count=6 | xxd -p );
	NewMACPart=$(echo "$1" | awk '{print tolower($0)}');
# 	RandomPart=$( dd if=/dev/urandom bs=1 count=3 | xxd -p );
# 	NewMAC="${DefaultMAC::-6}$RandomPart"

	LengthMAC=${#DefaultMAC};
	InitialPart=${DefaultMAC:0:6}

	NewMAC="$InitialPart$NewMACPart"

	echo "[FAU2OS-utils]: Rewriting $DefaultMAC --> $NewMAC" > /dev/kmsg

	LimeReconfScript="/etc/uci-defaults/lime-reconf.sh"
cat << EOF > "$LimeReconfScript"
#!/bin/bash
lime-config
lime-apply
/etc/init.d/network restart
EOF
	chmod +x "$LimeReconfScript"

	NewMACBinary=$(echo -n $NewMAC | sed 's/\(..\)/\\x\1/g')
	echo -ne $NewMACBinary | dd of=$Filepath bs=1 seek=$((0xe000)) conv=notrunc

	mtd -r write $Filepath factory
}

if [ "$1" = "master" ];then
	MasterConfiguration
elif [ "$1" = "slave" ];then
	if [ "$2" = "1" ] || [ "$2" = "2" ];then
		SlaveConfiguration $2
	else
		echo "Wrong second argument. supported index: [1,2]"
	fi;
elif [ "$1" = "libre" ];then
	LibreConfiguration $2
else
	echo "you should specify the role. Usage: $0 master | slave <index> | libre <index>"
fi;




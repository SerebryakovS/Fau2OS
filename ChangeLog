echo 5 >/sys/class/gpio/export
echo out >/sys/class/gpio/gpio5/direction
echo 1 >/sys/class/gpio/gpio5/value
mesh-led-controller random
-----------------------------------------------------------
https://yhbt.net/lore/all/56AB6103.6010702@samsung.com/T/

ACTIONS:
    0001. Обновлен mesh-wizard
        * добавлен выбор протокола маршрутизации (+при выборе подгружаются нужные luci-app)
    0002. добавлена настройка сетевых профилей и исправлена настройка внутренних интерфейсов lan/wan после lime-config
    0003. Исправлен luci-app-batman-adv (теперь работает)
    0004. Написаны консольные утилиты для работы с сетью и rpc API:
        mesh-hosts-resolve-libre-bat   # можно использовать, чтобы быстро посмотреть всех mesh-устройств в сети и их IP
        mesh-hosts-resolve-libre-bmx7  # то же, что и mesh-hosts-resolve-libre-bat, только для bmx7(если выбран в визарде)
        mesh-network-profile
        mesh-shared-state-manager
        mesh-wan-conn-status
    0005. hostname от всех нод распределяются по сети (на всякий случай сделан пинок mesh-shared-state-manager)
    0006. Добавлен shared-state для всех клиентов, с каждой ноды видно клиентов по всей сети
    ----
    0007. Дополнен скрипт настройки радиомодулей (поддержка внешних усилителей, опционально)
    0008. Подправлена сетевая настройка (полоса выставлена шире)
    0009. Собран отдельный пакет, собирающий все утилиты и конфиги для cuman-ac12x + libremesh + bat+bmx
    0010. Разделены профили для ac12g и ac12m(для дальнейшей правки DTS и включения sn3218)
    0011. В баннер включена информация по профилю и дате релиза
    0012. Исправлены поддержки модели в DTS, теперь предупреждений нет при перезаливке прошивки
    0013. Добавлена поддержка sn3218 на уровне драйвера и добавлена интеграция в /etc/config/led

grep -Rns "cuman:green:power-g" ./*
./build_dir/target-mipsel_24kc_musl/linux-ramips_mt7621/base-files/.pkgdir/base-files/bin/sysdef:88:    uci set system.@led[0].sysfs='cuman:green:power-g'
./build_dir/target-mipsel_24kc_musl/linux-ramips_mt7621/base-files/.pkgdir/base-files/bin/sysdef:101:   uci set system.@led[8].sysfs='cuman:green:power-g'
./build_dir/target-mipsel_24kc_musl/linux-ramips_mt7621/base-files/ipkg-mipsel_24kc/base-files/bin/sysdef:88:   uci set system.@led[0].sysfs='cuman:green:power-g'
./build_dir/target-mipsel_24kc_musl/linux-ramips_mt7621/base-files/ipkg-mipsel_24kc/base-files/bin/sysdef:101:  uci set system.@led[8].sysfs='cuman:green:power-g'
./build_dir/target-mipsel_24kc_musl/root.orig-ramips/bin/sysdef:88:     uci set system.@led[0].sysfs='cuman:green:power-g'
./build_dir/target-mipsel_24kc_musl/root.orig-ramips/bin/sysdef:101:    uci set system.@led[8].sysfs='cuman:green:power-g'
./build_dir/target-mipsel_24kc_musl/root-ramips/bin/sysdef:88:  uci set system.@led[0].sysfs='cuman:green:power-g'
./build_dir/target-mipsel_24kc_musl/root-ramips/bin/sysdef:101: uci set system.@led[8].sysfs='cuman:green:power-g'
./target/linux/ramips/dts/CUMAN-SPECTRA-AC12-GLTE-V11.dts:44:                   label = "cuman:green:power-g";
./target/linux/ramips/dts/CUMAN-SPECTRA-AC12-G-V12.dts:44:                      label = "cuman:green:power-g";
./target/linux/ramips/dts/CUMAN-SPECTRA-AC12-G-V11.dts:44:                      label = "cuman:green:power-g";
./target/linux/ramips/dts/CUMAN-SPECTRA-AC12-G-V13-A2.dts:49:                   label = "cuman:green:power-g";
./target/linux/ramips/dts/CUMAN-SPECTRA-AC12-GLTE-V14-A2.dts:49:                        label = "cuman:green:power-g";
./target/linux/ramips/dts/CUMAN-SPECTRA-AC12-G-V14-A2.dts:49:                   label = "cuman:green:power-g";
./target/linux/ramips/dts/CUMAN-SPECTRA-AC12-GLTE-V12.dts:44:                   label = "cuman:green:power-g";
./target/linux/ramips/dts/CUMAN-SPECTRA-AC12-GLTE-V13-A2.dts:49:                        label = "cuman:green:power-g";
./target/linux/ramips/mt7621/base-files/bin/sysdef:88:  uci set system.@led[0].sysfs='cuman:green:power-g'
./target/linux/ramips/mt7621/base-files/bin/sysdef:101: uci set system.@led[8].sysfs='cuman:green:power-g'

mt76-phy0       sn3218:0:54:13  sn3218:0:54:3   sn3218:0:54:8
mt76-phy1       sn3218:0:54:14  sn3218:0:54:4   sn3218:0:54:9
sn3218:0:54:10  sn3218:0:54:15  sn3218:0:54:5   sn3218:led1
sn3218:0:54:11  sn3218:0:54:16  sn3218:0:54:6   sn3218:led2
sn3218:0:54:12  sn3218:0:54:17  sn3218:0:54:7   sn3218:led3


/////////////////////////


I want to create next line topology: fau2-029e <-> fau2-02ae <-> fau2-02be <-> fau2-023a

    fau2-029e: links_count=1; block(fau2-02be, fau2-023a)
    fau2-02ae: links_count=2; block(fau2-023a)
    fau2-02be: links_count=2; block(fau2-029e)
    fau2-023a: links_count=1; block(fau2-029e,fau2-02ae)


fau2-029e | local_mac: F8:5E:3C:9C:02:9E | local_ipv6: fd70:2226:578b:5f4f:  f3:c4f3:b370: 2fa | wlan1_ipv6: fe80::fa5e:3cff:fe9c:2a2
fau2-02ae | local_mac: F8:5E:3C:CC:02:AE | local_ipv6: fd70: 2a5:b1b1:7425:2ddc:6416:8e09:82d8 | wlan1_ipv6: fe80::fa5e:3cff:fecc:2b2
fau2-02be | local_mac: F8:5E:3C:1E:57:05 | local_ipv6: fd70: ade:2129:b55a:9fe0:ff1d:c612:5af1 | wlan1_ipv6: fe80::fa5e:3cff:fe1e:2c2
fau2-023a | local_mac: F8:5E:3C:FF:EA:3D | local_ipv6: fd70:a742:5554:d725:a479:b53c:cc59:7049 | wlan1_ipv6: fe80::fa5e:3cff:feff:23e

device: wlan1-mesh_18

iptables fau2-029e:
    wireless:
        list maclist 'F8:5E:3C:1E:57:05' # MAC of fau2-02be
        list maclist 'F8:5E:3C:FF:EA:3D' # MAC of fau2-023a
iptables fau2-02ae:
    wireless:
        list maclist 'F8:5E:3C:FF:EA:3D' # MAC of fau2-023a
iptables fau2-02be:
    wireless:
        list maclist 'F8:5E:3C:9C:02:9E' # MAC of fau2-029e
iptables fau2-023a:
    wireless:
        list maclist 'F8:5E:3C:9C:02:9E' # MAC of fau2-029e
        list maclist 'F8:5E:3C:CC:02:AE' # MAC of fau2-02ae

It appears that the iptables and firewall rules are not sufficient to disrupt the BMX7 mesh links, as BMX7 is likely forming links at a layer below where iptables operates. BMX7, being a mesh networking protocol, is designed to automatically discover and maintain links with nearby nodes, which is why your iptables rules aren't affecting it.

from fau2-029e:
    {
        "destination_label": "fau2-02ae.02A5B1B1",
        "next_label": "fau2-02ae.02A5B1B1",
        "hops": 1,
    },
    {
        "destination_label": "fau2-02be.0ADE2129",
        "next_label": "fau2-02ae.02A5B1B1",
        "hops": 3,
    },
    {
        "destination_label": "fau2-023a.A7425554",
        "next_label": "fau2-02ae.02A5B1B1",
        "hops": 2,
    }

root@fau2-029e:/# traceroute fd70:ade:2129:b55a:9fe0:ff1d:c612:5af1
traceroute to fd70:ade:2129:b55a:9fe0:ff1d:c612:5af1 (fd70:ade:2129:b55a:9fe0:ff1d:c612:5af1), 30 hops max, 64 byte packets
 1  fd70:2a5:b1b1:7425:2ddc:6416:8e09:82d8 (fd70:2a5:b1b1:7425:2ddc:6416:8e09:82d8)  1.593 ms  1.328 ms  0.682 ms
 2  fd70:a742:5554:d725:a479:b53c:cc59:7049 (fd70:a742:5554:d725:a479:b53c:cc59:7049)  4.327 ms  67.696 ms  98.484 ms
 3  fd70:ade:2129:b55a:9fe0:ff1d:c612:5af1 (fd70:ade:2129:b55a:9fe0:ff1d:c612:5af1)  129.582 ms  91.710 ms  140.757 ms




10.68.221.231
External LNA Gain n for 5GHz (0x45/0x49/0x4D)
The default eLNA gain value would be 0x8C and it means m “ +12dB”. I've set BF (111111) which is NOT invalid
NIC Configuration 1 (0x36/0x37)
3-th bit:  External 5Ghz band LNA
insmod mtd-rw.ko i_want_a_brick=1 && mtd -r write /root/eeprom.bin factory
10011011 - 9B - 27dBm
